apply plugin: "com.android.library"
apply plugin: "com.github.kt3k.coveralls"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        consumerProguardFiles "release-proguard.pro"
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    packagingOptions {
        exclude '**/BuildConfig.class'
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
        }
    }
}

ext {
    // Note: Don't update past 3.12.x, as it sets the minSdk to Android 5.0
    okhttpVersion = "3.12.10"
}

dependencies {
    api "androidx.annotation:annotation:1.2.0"
    api "androidx.core:core:1.6.0"
    api "com.squareup.okhttp3:okhttp:$okhttpVersion"
    api project(':bolts-tasks')

    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.robolectric:robolectric:4.6"
    testImplementation "org.skyscreamer:jsonassert:1.5.0"
    testImplementation "org.mockito:mockito-core:3.6.28"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttpVersion"
}

//region Code Coverage

apply plugin: "jacoco"

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    group = "Reporting"
    description = "Generate Jacoco coverage reports"

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ]))
}

//endregion

//region Coveralls

coveralls.jacocoReportPath = "${buildDir}/reports/jacoco/jacocoTestReport/jacocoTestReport.xml"

//endregion

apply from: "https://raw.githubusercontent.com/Commit451/gradle-android-javadocs/2.0.0/gradle-android-javadocs.gradle"
